diff --git a/src/gpk-common.c b/src/gpk-common.c
index fd63bf4..a3ee237 100644
--- a/src/gpk-common.c
+++ b/src/gpk-common.c
@@ -169,19 +169,39 @@ static PolKitAction *
 get_action_from_error (GError *error)
 {
 	PolKitAction *action;
-	const gchar *paction;
+	gchar *paction, *p;
 
 	action = polkit_action_new ();
 
 	paction = NULL;
 	if (g_str_has_prefix (error->message, "Not privileged for action: ")) {
-		paction = error->message + strlen ("Not privileged for action: ");
+		paction = g_strdup (error->message + strlen ("Not privileged for action: "));
+		p = strchr (paction, ' ');
+		if (p)
+			*p = '\0';
 	}
 	polkit_action_set_action_id (action, paction);
 
+	g_free (paction);
+
 	return action;
 }
 
+static PolKitResult
+get_result_from_error (GError *error)
+{
+	PolKitResult result = POLKIT_RESULT_UNKNOWN;
+	const char *p;
+
+	p = strrchr (error->message, ' ');
+	if (p) {
+		p++;
+		polkit_result_from_string_representation (p, &result);
+	}
+
+	return result;
+}
+
 static void
 system_restart_auth_cb (PolKitAction *action, gboolean gained_privilege,
 			GError *error, DBusGProxy *proxy)
@@ -229,6 +249,8 @@ gpk_restart_system (void)
 	GError *error = NULL;
 	gboolean ret;
 	PolKitAction *action;
+	PolKitAction *action2;
+	PolKitResult result;
 
 	/* check dbus connections, exit if not valid */
 	connection = dbus_g_bus_get (DBUS_BUS_SYSTEM, &error);
@@ -253,6 +275,25 @@ gpk_restart_system (void)
 	if (!ret) {
 		if (dbus_g_error_has_name (error, "org.freedesktop.ConsoleKit.Manager.NotPrivileged")) {
 			action = get_action_from_error (error);
+			result = get_result_from_error (error);
+			
+			if (result == POLKIT_RESULT_NO) {
+				action2 = polkit_action_new ();
+				polkit_action_set_action_id (action2,
+							     "org.freedesktop.consolekit.system.restart-multiple-users");
+				if (polkit_action_equal (action, action2)) {
+					gpk_error_modal_dialog (_("Failed to restart"),
+								_("You are not allowed to restart the computer "
+								  "because multiple users are logged in"));
+				}
+
+				g_error_free (error);
+
+				polkit_action_unref (action);
+				polkit_action_unref (action2);
+
+				return FALSE;
+			}
 			g_clear_error (&error);
 			ret = request_restart_priv (proxy, action, &error);
 			polkit_action_unref (action);
